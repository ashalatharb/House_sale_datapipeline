CREATE EXTERNAL SCHEMA spectrum
FROM DATA CATALOG DATABASE 'spectrumdb' iam_role 'arn:aws:iam::"$AWS_ID":role/"$IAM_ROLE_NAME"' CREATE EXTERNAL DATABASE IF NOT EXISTS;

DROP TABLE IF EXISTS spectrum.sales_staging;
CREATE EXTERNAL TABLE spectrum.sales_staging (
(
    ID INTEGER,
	SALE_DATE TIMESTAMP,
    PRICE DECIMAL(8,3),
	BEDROOMS INTEGER,
	BATHROOMS INTEGER,
	SQFT_LIVING INTEGER,
	SQFT_LOT INTEGER,
    FLOORS DECIMAL(3, 3),
    WATERFRONT INTEGER,
	VIEWS INTEGER,
	CONDITION INTEGER,
	GRADE INTEGER,
	SQFT_ABOVE INTEGER,
	SQFT_BASEMENT INTEGER,
	YR_BUILD INTEGER,
	YR_RENOVATED INTEGER,
	ZIPCODE VARCHAR(10),
	LAT DECIMAL(4,6),
	LNG DECIMAL(4,6),
	SQFT_LIVING15 INTEGER,
	SQFT_LOT15 INTEGER
) PARTITIONED BY (ZIPCODE VARCHAR) 
ROW FORMAT DELIMITED 
FIELDS TERMINATED BY ',' 
STORED AS textfile 
LOCATION 's3://"$1"/stage/data/' 
TABLE PROPERTIES ('skip.header.line.count' = '1');

DROP TABLE IF EXISTS spectrum.neighbourhood;


CREATE EXTERNAL TABLE spectrum.neighbourhood (
  ZIPCODE VARCHAR(10),
  PLACEID VARCHAR(20),
  NAME   array<varchar(20)>,
  BUSINESS_STATUS VARCHAR(25),
  PLACE_TYPE VARCHAR(50)
)
STORED AS PARQUET
LOCATION 's3://"$1"/stage/data/' ;

CREATE SCHEMA all_sales;

CREATE TABLE all_sales.sales_with_nghbrhd (
   ID INTEGER,
	SALE_DATE TIMESTAMP,
    PRICE DECIMAL(8,3),
	BEDROOMS INTEGER,
	BATHROOMS INTEGER,
	SQFT_LIVING INTEGER,
	SQFT_LOT INTEGER,
    FLOORS DECIMAL(3, 3),
    WATERFRONT INTEGER,
	VIEWS INTEGER,
	CONDITION INTEGER,
	GRADE INTEGER,
	SQFT_ABOVE INTEGER,
	SQFT_BASEMENT INTEGER,
	YR_BUILD INTEGER,
	YR_RENOVATED INTEGER,
	ZIPCODE VARCHAR(10),
	LAT DECIMAL(4,6),
	LNG DECIMAL(4,6),
	SQFT_LIVING15 INTEGER,
	SQFT_LOT15 INTEGER,
	NO_ENTRTMNT_CNTRS INTEGER,
	NO_TRANSIT_STNS INTEGER,
	NO_HEALTH_CNTRS INTEGER
) PARTITIONED BY (ZIPCODE VARCHAR) ;

-- add insert statement
